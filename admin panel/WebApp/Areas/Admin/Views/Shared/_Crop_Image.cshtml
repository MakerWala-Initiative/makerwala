@*<script src="~/Content/TrackerContent/node_modules/croppie/angular-croppie.js"></script>*@


<style>
    
label.cabinet {
    display: block;
    cursor: pointer;
}

    label.cabinet input.file {
        position: relative;
        /*height: 100%;
        width: auto;*/
        opacity: 0;
        -moz-opacity: 0;
        filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0);
        margin-top: -30px;
    }

#upload-demo {
    width: 250px;
    height: 250px;
    padding-bottom: 25px;
}

figure figcaption {
    display: none;
    position: absolute;
    bottom: 0;
    color: #fff;
    width: 100%;
    padding-left: 9px;
    padding-bottom: 5px;
    text-shadow: 0 0 10px #000;
}


    div.gallery {
        margin: 5px;
        margin-left: 12px;
        float: left;
        width: 220px;
    }

        div.gallery img {
            width: 100%;
            height: auto;
        }


</style>

<div ng-controller="ctrCropeImage" class="modal fade" id="cropImagePop" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">
            </div>
            <div class="modal-body">
                <div id="CropArea" class="center-block"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="cropImageBtn" class="btn btn-primary">Crop</button>
            </div>
        </div>
    </div>
</div>

<script>
    app.controller("ctrCropeImage", ['$scope', '$http', '$q', '$interval', function ($scope, $http, $q, $interval) {
        //$scope.maxSize = 10;
        //$scope.totalCount = 0;
        //$scope.pageIndex = 1;
        //$scope.pageSizeSelected = 10;
    }]);
</script>

<script>
    var $uploadCrop,
           rawImg,
        viewportH,
        viewportW;
    function fileChangeEvent(input, viewportH, viewportW, PreviewResult) {
        $('#CropArea').croppie('destroy');

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {

                $('#cropImagePop').modal('show');
                rawImg = e.target.result;
            }
            reader.readAsDataURL(input.files[0]);


            $uploadCrop = $('#CropArea').croppie({
                boundary: {
                    width: viewportW + 40,
                    height: viewportH + 40
                },
                viewport: {
                    width: viewportW,
                    height: viewportH
                },
                enforceBoundary: false,
                enableExif: true
            });
            $('#cropImagePop').on('shown.bs.modal', function () {
                $uploadCrop.croppie('bind', {
                    url: rawImg
                }).then(function () {
                    console.log('jQuery bind complete');
                });
            });


            $('#cropImageBtn').on('click', function (ev) {
                $uploadCrop.croppie('result', {
                    type: 'canvas',//base64
                    // format: 'jpeg',
                    size: { width: viewportW, height: viewportH }
                }).then(function (resp) {
                    $('#' + PreviewResult).attr('src', resp);
                    $("#cropImageBtn").unbind("click");
                    $('#cropImagePop').modal('hide');
                });
            });

        }
        else {
            alert("Sorry - you're browser doesn't support the FileReader API");
        }


    }
</script>
